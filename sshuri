#!/usr/bin/env python
# See https://github.com/kr/sshuri for updates.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import os, urlparse, sys

prefix = 'ssh://'

if len(sys.argv[1:]) < 1:
    print >>sys.stderr, 'Usage: ssh-uri [flags] <uri> [command]'
    sys.exit(1)

if len(sys.argv[1:]) >= 2 and sys.argv[-2].startswith(prefix):
    cmd = sys.argv[-1]
    uristr = sys.argv[-2]
    flags = sys.argv[1:-2]
elif sys.argv[-1].startswith(prefix):
    cmd = None
    uristr = sys.argv[-1]
    flags = sys.argv[1:-1]
else:
    print >>sys.stderr, 'Error: %r is not an SSH URI' % (uristr,)
    print >>sys.stderr, 'Usage: ssh-uri [flags] <uri>'
    sys.exit(1)

u = urlparse.urlparse(uristr)

args = ['ssh'] + flags
if u.port is not None:
    args.extend(('-p', str(u.port)))
where = u.hostname
if u.username is not None:
    where = u.username + '@' + where
args.append(where)
if cmd is not None:
    args.append(cmd)

os.execvp('ssh', args)
